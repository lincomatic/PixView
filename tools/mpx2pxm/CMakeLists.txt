CMAKE_MINIMUM_REQUIRED(VERSION 2.8.8)

SET( PACKAGE mpx2pxm )
SET( VERSION 0.0.1 )
SET( CMAKE_INCLUDE_CURRENT_DIR ON )

FIND_PACKAGE(Qt5Core REQUIRED)
FIND_PACKAGE(Qt5Xml REQUIRED)

# Use static where it is possible
IF(WIN32)
    SET(CMAKE_FIND_LIBRARY_SUFFIXES .lib .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
ELSE(WIN32)
    SET(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
ENDIF(WIN32)

INCLUDE_DIRECTORIES(
  ${COMMON_INCLUDES}
  ${CMAKE_CURRENT_SOURCE_DIR}/src
  /usr/local/include
  ${QT_INCLUDES}
  ${CMAKE_FIND_ROOT_PATH}/opt/vc/include
  ${Qt5Widgets_INCLUDE_DIRS}
  ${Qt5Gui_INCLUDE_DIRS}
  ${Qt5Qml_INCLUDE_DIRS}
  ${Qt5Quick_INCLUDE_DIRS}
  ${Qt5Xml_INCLUDE_DIRS}
)

SET( SOURCES
   main.cpp
   Parser.cpp
)

SET( MOC_HEADER
   Parser.hpp
)

IF(APPLE)
	SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++ -g" )
ENDIF()

SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x ${Qt5Core_EXECUTABLE_COMPILE_FLAGS} ${Qt5Xml_EXECUTABLE_COMPILE_FLAGS}" )

QT5_WRAP_CPP( SOURCES2 ${MOC_HEADER})
ADD_EXECUTABLE( mpx2pxm ${SOURCES} ${SOURCES2})

IF (WIN32)

TARGET_LINK_LIBRARIES( mpx2pxm
  -Wl,--start-group
  ${Qt5Core_LIBRARIES}
  ${Qt5Xml_LIBRARIES}
  pthread
  -Wl,--end-group
  -Wl,-Bstatic stdc++)
ELSE()

TARGET_LINK_LIBRARIES( mpx2pxm
  -Wl,--start-group
  -L${CMAKE_FIND_ROOT_PATH}/opt/vc/lib
  ${Qt5Core_LIBRARIES}
  ${Qt5Xml_LIBRARIES}
  stdc++
  pthread
  c
  -Wl,--end-group )
ENDIF()